A3:
---
	Error Numbers:
	--------------
		-55555 is divide by zero error.
		-44444 is dmem error.
		-33333 is imem error.

A2 Assumptions:
---------------
	(1) The same name can be used for multiple symbols as long as the symbols are not created in the same scope.
		The most local symbol is used when multiple symbols at different scopes under the same name are present.
		
		ex. 
			/* error */
			int f(void) {
				int x;
				void x;
			}

			/* no errors */
			int f(void) {
				int x;
				/* typeof(x) == int */

				if (1) {
					void x;
					/* typeof(x) == void*/
				}
			}

			note: the variables can have the same type and still refer to different values in different scopes.

	(2)	Comparison expressions evaluate to an integer.
			
			ex.
				int x;
				if ((x>1) == 0) {
					/* valid */
				}

	(3) Undefined symbols are by default integers so further error handling can take place.
			
			ex. The following only produces an undefined symbol error.

				int x; int y; 

				int f(int a, int b, int c) {
					return 1;
				}

				void main(void) {
					f(x,y,z);
				}

	(4) Assignment operations evaluate to the left hande side of the assignment.
		Thus they can be used as conditions.

			ex.
				int x;
				if (x=1) { ... }

				is equivalent to:

				int x;
				x=1;
				if(x) { ... }

Building and Running the cm compiler:
	Type the following to perform the desired action.

	To build:
		'make' or 'make cm'

	To run: 
		'./cm <flags> <filename>'

	To clean build files and executables:
		'make clean'

.cm files:
	The 1.cm -> 5.cm files can be found in the 'files' subdirectory.